// page source --->>> https://leetcode.com/problems/path-sum-iii/


class Solution {
    int count = 0;
    public int pathSum(TreeNode root, int targetSum) {
        
        countTarget_temp(root , targetSum);
        return count;
    }
    public void countTarget_temp(TreeNode node , int targetSum){
        if(node == null){
            return;
        }
        //if(node.val == -2)
        countTarget(node , 0 , targetSum);
        
        countTarget_temp(node.left , targetSum);
        countTarget_temp(node.right , targetSum);
    }
    
    public void countTarget(TreeNode node , long csum , int targetSum){
        if(node == null){

            return;
        }
        //System.out.println(node.val + " " + csum);
        if(csum+node.val == targetSum){
            //System.out.println(csum  + " " + node.val);
            count++;
        }
        countTarget(node.left , csum+node.val , targetSum);
        countTarget(node.right , csum+node.val , targetSum);
    }
}
