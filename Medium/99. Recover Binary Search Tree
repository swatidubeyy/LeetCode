// page source --->>> https://leetcode.com/problems/recover-binary-search-tree/





class Solution {
    public void recoverTree(TreeNode root) {
       TreeNode curr = root;
       TreeNode prev = null;
       TreeNode c1 = null;
        TreeNode c2 = null;
        while(curr != null){
            if(curr.left == null){
                if(prev != null){
                    if(prev.val > curr.val){
                        if(c1 == null){
                            c1 = prev;
                            c2 = curr;
                        }else{
                            c2 = curr;
                        }
                    }    
                }
                prev = curr;
                curr = curr.right;
            }else{
                TreeNode iop = curr.left;
                while(iop.right != null && iop.right != curr){
                    iop = iop.right;
                }
                if(iop.right == null){
                    iop.right = curr;
                    curr = curr.left;
                }
                if(iop.right == curr){
                    iop.right = null;
                    if(prev != null){
                    if(prev.val > curr.val){
                        if(c1 == null){
                            c1 = prev;
                            c2 = curr;
                        }else{
                            c2 = curr;
                        }
                    }    
                }
                prev = curr;
                    curr = curr.right;
                }
            }
        } 
        int temp = c1.val;
        c1.val = c2.val;
        c2.val = temp;
    }
}
